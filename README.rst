| |travis-devel|
| |codecov-devel|
| |licence|

Orthogonal Functions
====================

A python package to generate a set of orthogonal functions.

Status
~~~~~~

+------------+------------------+
| Platform   | CI Status        |
+============+==================+
| Linux      | |travis-devel|   |
+------------+------------------+
| OSX        | |travis-devel|   |
+------------+------------------+
| Windows    | |travis-devel|   |
+------------+------------------+

Description
~~~~~~~~~~~

This script generates a set of orthonormal functions, called |image09|,
based on the set of non-orthonormal functions |image10| defined by

.. raw:: html

   <p align="center">
     <img src="./doc/images/Equation_phi_i.svg">
   </p>

The orthonormalized functions |image11| are the linear combination of
the functions |image12| by

.. raw:: html

   <p align="center">
       <img src="./doc/images/Equation_phi_i_perp.svg">
   </p>

The functions |image13| are orthonormal in the interval |image14| with
respect to the weight function |image15|. That is,

| 
| 
| 

where |image16| is the Kronecker delta function. The orthogonal
functions are generated by `Gram-Schmidt orthogonalization
process <https://en.wikipedia.org/wiki/Gram%E2%80%93Schmidt_process>`__.
This script produces the symbolic functions using
`Sympy <https://www.sympy.org>`__, a Python computer algebraic package.

Package Prerequisites
~~~~~~~~~~~~~~~~~~~~~

The required packages can be installed, for instance, by ``conda`` or
``pip`` as follows.

#. Install the required packages with ``pip`` by

   ::

       sudo pip install -r requirements.txt

#. Alternatively, install the required packages with
   `anaconda <https://www.anaconda.com/>`__ or
   `miniconda <https://docs.conda.io/en/latest/miniconda.html>`__ by

   ::

       sudo conda install pip
       sudo conda pip install -r requirements.txt

Usage
~~~~~

::

    $ python GenerateOrthogonalFunctions.py [options]

Optional arguments:

+--------------------------------------+------------------------------------------------------------------------------------------+
| Option                               | Description                                                                              |
+======================================+==========================================================================================+
| ``-h``, ``--help``                   | Prints a help message.                                                                   |
+--------------------------------------+------------------------------------------------------------------------------------------+
| ``-v``, ``--version``                | Prints version.                                                                          |
+--------------------------------------+------------------------------------------------------------------------------------------+
| ``-l``, ``--license``                | Prints author info, citation and license.                                                |
+--------------------------------------+------------------------------------------------------------------------------------------+
| ``-n``, ``--num-func[=int]``         | Number of orthogonal functions to generate. Positive integer. Default is 9.              |
+--------------------------------------+------------------------------------------------------------------------------------------+
| ``-s``, ``--start-func[=int]``       | Starting function index. Non-negative integer. Default is 1.                             |
+--------------------------------------+------------------------------------------------------------------------------------------+
| ``-e``, ``--end-interval[=float]``   | End of the interval of functions domains. Real number greater than zero. Default is 1.   |
+--------------------------------------+------------------------------------------------------------------------------------------+
| ``-c``,\ ``--check``                 | Checks orthogonality of generated functions.                                             |
+--------------------------------------+------------------------------------------------------------------------------------------+
| ``-p``, ``--plot``                   | Plots generated functions, also saves the plot as pdf file in the current directory.     |
+--------------------------------------+------------------------------------------------------------------------------------------+

The variables |image17|, |image18|, and |image19| can be set in the
script by the following arguments,

+-------------+--------------------------+---------------------------------+
| Variable    | Variable in script       | Option                          |
+=============+==========================+=================================+
| |image23|   | ``StartFunctionIndex``   | ``-s``, or ``--start-func``     |
+-------------+--------------------------+---------------------------------+
| |image24|   | ``NumFunctions``         | ``-n``, or ``--num-func``       |
+-------------+--------------------------+---------------------------------+
| |image25|   | ``EndInterval``          | ``-e``, or ``--end-interval``   |
+-------------+--------------------------+---------------------------------+

Examples
~~~~~~~~

#. Generate nine orthogonal functions from index 1 to 9 (defaults)

   $ python GenerateOrthogonalFunctions.py

#. Generate eight orthogonal functions from index 1 to 8

   $ python GenerateOrthogonalFunctions.py -n 8

#. Generate nine orthogonal functions from index 0 to 8

   $ python GenerateOrthogonalFunctions.py -s 0

#. Generate nine orthogonal functions that are orthonormal in the
   interval [0,10]

   $ python GenerateOrthogonalFunctions.py -e 10

#. Check orthogonality of each two functions, plot the orthonormal
   functions and save the plot to pdf

   $ python GenerateOrthogonalFunctions.py -c -p

#. A complete example:

   $ python GenerateOrthogonalFunctions.py -n 9 -s 1 -e 1 -c -p

Output
~~~~~~

-  Displays the orthogonal functions as computer algebraic symbolic
   functions. An example a set of generated functions is shown below.

::

    phi_1(t) =  sqrt(x)
    phi_2(t) =  sqrt(6)*(5*x**(1/3) - 6*sqrt(x))/3
    phi_3(t) =  sqrt(2)*(21*x**(1/4) - 40*x**(1/3) + 20*sqrt(x))/2
    phi_4(t) =  sqrt(10)*(84*x**(1/5) - 210*x**(1/4) + 175*x**(1/3) - 50*sqrt(x))/5
    phi_5(t) =  sqrt(3)*(330*x**(1/6) - 1008*x**(1/5) + 1134*x**(1/4) - 560*x**(1/3) + 105*sqrt(x))/3
    phi_6(t) =  sqrt(14)*(1287*x**(1/7) - 4620*x**(1/6) + 6468*x**(1/5) - 4410*x**(1/4) + 1470*x**(1/3) - 196*sqrt(x))/7
    phi_7(t) =  5005*x**(1/8)/2 - 10296*x**(1/7) + 17160*x**(1/6) - 14784*x**(1/5) + 6930*x**(1/4) - 1680*x**(1/3) + 168*sqrt(x)
    phi_8(t) =  sqrt(2)*(19448*x**(1/9) - 90090*x**(1/8) + 173745*x**(1/7) - 180180*x**(1/6) + 108108*x**(1/5) - 37422*x**(1/4) + 6930*x**(1/3) - 540*sqrt(x))/3
    phi_9(t) =  sqrt(5)*(75582*x**(1/10) - 388960*x**(1/9) + 850850*x**(1/8) - 1029600*x**(1/7) + 750750*x**(1/6) - 336336*x**(1/5) + 90090*x**(1/4) - 13200*x**(1/3) + 825*sqrt(x))/5

-  Displays readable coefficients, |image26| and |image27| of the
   functions. For instance,

::

      i      alpha_i                                    a_[ij]
    ------  ----------   -----------------------------------------------------------------------
    i = 1:  +sqrt(2/2)   [1                                                                    ]
    i = 2:  -sqrt(2/3)   [6,   -5                                                              ]
    i = 3:  +sqrt(2/4)   [20,  -40,    21                                                      ]
    i = 4:  -sqrt(2/5)   [50,  -175,   210,   -84                                              ]
    i = 5:  +sqrt(2/6)   [105, -560,   1134,  -1008,   330                                     ]
    i = 6:  -sqrt(2/7)   [196, -1470,  4410,  -6468,   4620,   -1287                           ]
    i = 7:  +sqrt(2/8)   [336, -3360,  13860, -29568,  34320,  -20592,   5005                  ]
    i = 8:  -sqrt(2/9)   [540, -6930,  37422, -108108, 180180, -173745,  90090,  -19448        ]
    i = 9:  +sqrt(2/10)  [825, -13200, 90090, -336336, 750750, -1029600, 850850, -388960, 75582]

-  Displays a matrix of mutual inner product of functions to check
   orthogonality (using option ``-c``). An example of generated matrix
   is shown below.

::

    [[1 0 0 0 0 0 0 0 0]
     [0 1 0 0 0 0 0 0 0]
     [0 0 1 0 0 0 0 0 0]
     [0 0 0 1 0 0 0 0 0]
     [0 0 0 0 1 0 0 0 0]
     [0 0 0 0 0 1 0 0 0]
     [0 0 0 0 0 0 1 0 0]
     [0 0 0 0 0 0 0 1 0]
     [0 0 0 0 0 0 0 0 1]]

-  Plots the set of functions (using option ``-p``) and saves the plot
   in the directory\ ``./doc/images/OrthogonalFunctions.pdf``. An
   example of a generated plot is shown below.

.. raw:: html

   <p align="center">
   <img src="./doc/images/OrthogonalFunctions.svg">
   </p>

Citation
~~~~~~~~

Ameli, S. and Shadden. S. C. (2020). Interpolating the Trace of the
Inverse of Matrix **A** + t **B**.
`arXiv:2009.07385 <https://arxiv.org/abs/2009.07385>`__ [math.NA]

::

    @misc{AMELI-2020,
        title={Interpolating the Trace of the Inverse of Matrix $\mathbf{A} + t \mathbf{B}$},
        author={Siavash Ameli and Shawn C. Shadden},
        year={2020},
        month = sep,
        eid = {arXiv:2009.07385},
        eprint={2009.07385},
        archivePrefix={arXiv},
        primaryClass={math.NA},
        howpublished={\emph{arXiv}: 2009.07385 [math.NA]},
    }

.. |travis-devel| image:: https://img.shields.io/travis/com/ameli/Orthogonal-Functions
   :target: https://travis-ci.com/github/ameli/Orthogonal-Functions
.. |codecov-devel| image:: https://img.shields.io/codecov/c/github/ameli/Orthogonal-Functions
   :target: https://codecov.io/gh/ameli/Orthogonal-Functions
.. |licence| image:: https://img.shields.io/github/license/ameli/Orthogonal-Functions
   :target: https://opensource.org/licenses/MIT
.. |travis-devel| image:: https://img.shields.io/travis/com/ameli/Orthogonal-Functions?env=BADGE=linux&label=build&branch=master
   :target: https://travis-ci.com/github/ameli/Orthogonal-Functions
.. |travis-devel| image:: https://img.shields.io/travis/com/ameli/Orthogonal-Functions?env=BADGE=osx&label=build&branch=master
   :target: https://travis-ci.com/github/ameli/Orthogonal-Functions
.. |travis-devel| image:: https://img.shields.io/travis/com/ameli/Orthogonal-Functions?env=BADGE=windows&label=build&branch=master
   :target: https://travis-ci.com/github/ameli/Orthogonal-Functions
.. |travis-devel| image:: https://img.shields.io/travis/com/ameli/Orthogonal-Functions?env=BADGE=linux&label=build&branch=master
   :target: https://travis-ci.com/github/ameli/Orthogonal-Functions
.. |travis-devel| image:: https://img.shields.io/travis/com/ameli/Orthogonal-Functions?env=BADGE=osx&label=build&branch=master
   :target: https://travis-ci.com/github/ameli/Orthogonal-Functions
.. |travis-devel| image:: https://img.shields.io/travis/com/ameli/Orthogonal-Functions?env=BADGE=windows&label=build&branch=master
   :target: https://travis-ci.com/github/ameli/Orthogonal-Functions

ImageBaseDirectory="https://raw.githubusercontent.com/ameli/Orthogonal-Functions/master"
.. |image09| image:: {ImageBaseDirectory}/doc/images/phi_i_perp.svg
.. |image10| image:: {ImageBaseDirectory}/doc/images/phi_i.svg
.. |image11| image:: {ImageBaseDirectory}/doc/images/phi_i_perp.svg
.. |image12| image:: {ImageBaseDirectory}/doc/images/phi_i.svg
.. |image13| image:: {ImageBaseDirectory}/doc/images/phi_i_perp.svg
.. |image14| image:: {ImageBaseDirectory}/doc/images/interval.svg
.. |image15| image:: {ImageBaseDirectory}/doc/images/w.svg
.. |image16| image:: {ImageBaseDirectory}/doc/images/delta.svg
.. |image17| image:: {ImageBaseDirectory}/doc/images/i_0.svg
.. |image18| image:: {ImageBaseDirectory}/doc/images/n.svg
.. |image19| image:: {ImageBaseDirectory}/doc/images/L.svg
.. |image20| image:: {ImageBaseDirectory}/doc/images/i_0.svg
.. |image21| image:: {ImageBaseDirectory}/doc/images/n.svg
.. |image22| image:: {ImageBaseDirectory}/doc/images/L.svg
.. |image23| image:: {ImageBaseDirectory}/doc/images/i_0.svg
.. |image24| image:: {ImageBaseDirectory}/doc/images/n.svg
.. |image25| image:: {ImageBaseDirectory}/doc/images/L.svg
.. |image26| image:: {ImageBaseDirectory}/doc/images/alpha_i.svg
.. |image27| image:: {ImageBaseDirectory}/doc/images/a_ij.svg
