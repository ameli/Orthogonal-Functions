|travis-devel| |codecov-devel| |licence| |format| |implementation| |pyversions|

Orthogonal Functions
====================

A python package to generate a set of orthogonal functions.

- `PyPi package <https://pypi.org/project/OrthogonalFunctions/>`_
- `Github <https://github.com/ameli/Orthogonal-Functions>`_
- `Travis-CI <https://travis-ci.com/github/ameli/Orthogonal-Functions>`_
- `Codecov <https://codecov.io/gh/ameli/Orthogonal-Functions>`_

.. Status
.. ------
..
.. +------------+--------------------------+
.. | Platform   | CI Status                |
.. +============+==========================+
.. | Linux      | |travis-devel-linux|     |
.. +------------+--------------------------+
.. | OSX        | |travis-devel-osx|       |
.. +------------+--------------------------+
.. | Windows    | |travis-devel-windows|   |
.. +------------+--------------------------+

Description
-----------

This script generates a set of orthonormal functions, called |image09|, based on the set of non-orthonormal functions |image10| defined by

.. image:: https://raw.githubusercontent.com/ameli/Orthogonal-Functions/master/docs/images/Equation_phi_i.svg
    :align: center

The orthonormalized functions |image11| are the linear combination of the functions |image12| by

.. image:: https://raw.githubusercontent.com/ameli/Orthogonal-Functions/master/docs/images/Equation_phi_i_perp.svg
    :align: center

The functions |image13| are orthonormal in the interval |image14| with respect to the weight function |image15|. That is,

.. image:: https://raw.githubusercontent.com/ameli/Orthogonal-Functions/master/docs/images/Equation_orthogonality.svg
    :align: center

where |image16| is the Kronecker delta function. The orthogonal functions are generated by `Gram-Schmidt orthogonalization process <https://en.wikipedia.org/wiki/Gram%E2%80%93Schmidt_process>`__. This script produces the symbolic functions using `Sympy <https://www.sympy.org>`__, a Python computer algebraic package.

Install
-------

- Method 1: install using the package available on `PyPi <https://pypi.org/project/OrthogonalFunctions>`__ by

  ::

    python -m pip install OrthogonalFunctions

- Method 2: install directly from the source code by

  ::

    git clone https://github.com/ameli/Orthogonal-Functions.git
    cd Orthogonal-Functions
    python -m pip install -e .

Usage
-----

The package can be used in two ways:

1. Import as a Module
~~~~~~~~~~~~~~~~~~~~~

.. code-block:: python

    from OrthogonalFunctions import OrthogonalFunctions

    # Create an object
    OF = OrthogonalFunctions()

    # Generate Functions
    OF.Process()

    # Print Functions
    OF.Print()

    # Check mutual orthogonality of Functions
    OF.Check()

    # Plot Functions
    OF.Plot()

The ``OrthogonalFunctions`` also accepts some parameters:

.. code-block:: python

    # Specify any of the three parameters below in a dictionary
    Parameters = \
    {
        'StartFunctionIndex': 1,
        'NumFunctions': 9,
        'EndInterval': 1
    }

    # Create an object and pass the parameters
    OF = OrthogonalFunctions(**Parameters)

    # The rest is the same as before.

The parameters are:

- ``StartFunctionIndex``: the index of the starting function, |image23|. The default is ``1``.
- ``NumFunctions``: number of orthogonal functions to generate, |image24|. The default is ``9``.
- ``EndInterval``: the right interval of orthogonality, |image25|. The default is ``1``.

2. Use As Standalone Application
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The standalone application can be executed in the terminal in two ways:

#. If you have installed the package, call ``gen-ortho`` executable in terminal:

   ::

       gen-ortho [options]

   The optional argument ``[options]`` will be explained in the next section. When the package *OrthogonalFunctions* is installed, the executable ``gen-ortho`` is located in the ``/bin`` directory of the python.

#. Without installing the package, the main script of the package can be executed directly from the source code by

   ::

       # Download the package
       git clone https://github.com/ameli/Orthogonal-Functions.git

       # Go to the package source directory
       cd OrthogonalFunctions

       # Execute the main script of the package
       python -m OrthogonalFunctions [options]


Optional arguments
~~~~~~~~~~~~~~~~~~

When the *standalone application* (the second method in the above) is called, the executable accepts some optional arguments as follows.

+--------------------------------------+------------------------------------------------------------------------------------------+
| Option                               | Description                                                                              |
+======================================+==========================================================================================+
| ``-h``, ``--help``                   | Prints a help message.                                                                   |
+--------------------------------------+------------------------------------------------------------------------------------------+
| ``-v``, ``--version``                | Prints version.                                                                          |
+--------------------------------------+------------------------------------------------------------------------------------------+
| ``-l``, ``--license``                | Prints author info, citation and license.                                                |
+--------------------------------------+------------------------------------------------------------------------------------------+
| ``-n``, ``--num-func[=int]``         | Number of orthogonal functions to generate. Positive integer. Default is 9.              |
+--------------------------------------+------------------------------------------------------------------------------------------+
| ``-s``, ``--start-func[=int]``       | Starting function index. Non-negative integer. Default is 1.                             |
+--------------------------------------+------------------------------------------------------------------------------------------+
| ``-e``, ``--end-interval[=float]``   | End of the interval of functions domains. A real number greater than zero. Default is 1. |
+--------------------------------------+------------------------------------------------------------------------------------------+
| ``-c``,\ ``--check``                 | Checks orthogonality of generated functions.                                             |
+--------------------------------------+------------------------------------------------------------------------------------------+
| ``-p``, ``--plot``                   | Plots generated functions, also saves the plot as pdf file in the current directory.     |
+--------------------------------------+------------------------------------------------------------------------------------------+

Parameters
~~~~~~~~~~

The variables |image17|, |image18|, and |image19| can be set in the script by the following arguments,

+-------------+--------------------------+---------------------------------+
| Variable    | Variable in script       | Option                          |
+=============+==========================+=================================+
| |image23|   | ``StartFunctionIndex``   | ``-s``, or ``--start-func``     |
+-------------+--------------------------+---------------------------------+
| |image24|   | ``NumFunctions``         | ``-n``, or ``--num-func``       |
+-------------+--------------------------+---------------------------------+
| |image25|   | ``EndInterval``          | ``-e``, or ``--end-interval``   |
+-------------+--------------------------+---------------------------------+

Examples
~~~~~~~~

#. Generate nine orthogonal functions from index 1 to 9 (defaults)

   ::

        gen-ortho

#. Generate eight orthogonal functions from index 1 to 8

   ::

        gen-ortho -n 8

#. Generate nine orthogonal functions from index 0 to 8

   ::

        gen-ortho -s 0

#. Generate nine orthogonal functions that are orthonormal in the interval [0,10]

   ::

        gen-ortho -e 10

#. Check orthogonality of each two functions, plot the orthonormal functions and save the plot to pdf

   ::

        gen-ortho -c -p

#. A complete example:

   ::

        gen-ortho -n 9 -s 1 -e 1 -c -p

Output
------

-  Displays the orthogonal functions as computer algebraic symbolic functions. An example a set of generated functions is shown below.

::

    phi_1(t) =  sqrt(x)
    phi_2(t) =  sqrt(6)*(5*x**(1/3) - 6*sqrt(x))/3
    phi_3(t) =  sqrt(2)*(21*x**(1/4) - 40*x**(1/3) + 20*sqrt(x))/2
    phi_4(t) =  sqrt(10)*(84*x**(1/5) - 210*x**(1/4) + 175*x**(1/3) - 50*sqrt(x))/5
    phi_5(t) =  sqrt(3)*(330*x**(1/6) - 1008*x**(1/5) + 1134*x**(1/4) - 560*x**(1/3) + 105*sqrt(x))/3
    phi_6(t) =  sqrt(14)*(1287*x**(1/7) - 4620*x**(1/6) + 6468*x**(1/5) - 4410*x**(1/4) + 1470*x**(1/3) - 196*sqrt(x))/7
    phi_7(t) =  5005*x**(1/8)/2 - 10296*x**(1/7) + 17160*x**(1/6) - 14784*x**(1/5) + 6930*x**(1/4) - 1680*x**(1/3) + 168*sqrt(x)
    phi_8(t) =  sqrt(2)*(19448*x**(1/9) - 90090*x**(1/8) + 173745*x**(1/7) - 180180*x**(1/6) + 108108*x**(1/5) - 37422*x**(1/4) + 6930*x**(1/3) - 540*sqrt(x))/3
    phi_9(t) =  sqrt(5)*(75582*x**(1/10) - 388960*x**(1/9) + 850850*x**(1/8) - 1029600*x**(1/7) + 750750*x**(1/6) - 336336*x**(1/5) + 90090*x**(1/4) - 13200*x**(1/3) + 825*sqrt(x))/5

-  Displays readable coefficients, |image26| and |image27| of the functions. For instance,

::

      i      alpha_i                                    a_[ij]
    ------  ----------   -----------------------------------------------------------------------
    i = 1:  +sqrt(2/2)   [1                                                                    ]
    i = 2:  -sqrt(2/3)   [6,   -5                                                              ]
    i = 3:  +sqrt(2/4)   [20,  -40,    21                                                      ]
    i = 4:  -sqrt(2/5)   [50,  -175,   210,   -84                                              ]
    i = 5:  +sqrt(2/6)   [105, -560,   1134,  -1008,   330                                     ]
    i = 6:  -sqrt(2/7)   [196, -1470,  4410,  -6468,   4620,   -1287                           ]
    i = 7:  +sqrt(2/8)   [336, -3360,  13860, -29568,  34320,  -20592,   5005                  ]
    i = 8:  -sqrt(2/9)   [540, -6930,  37422, -108108, 180180, -173745,  90090,  -19448        ]
    i = 9:  +sqrt(2/10)  [825, -13200, 90090, -336336, 750750, -1029600, 850850, -388960, 75582]

-  Displays the matrix of the mutual inner product of functions to check orthogonality (using option ``-c``). An example of the generated matrix of the mutual inner product of functions is shown below.

::

    [[1 0 0 0 0 0 0 0 0]
     [0 1 0 0 0 0 0 0 0]
     [0 0 1 0 0 0 0 0 0]
     [0 0 0 1 0 0 0 0 0]
     [0 0 0 0 1 0 0 0 0]
     [0 0 0 0 0 1 0 0 0]
     [0 0 0 0 0 0 1 0 0]
     [0 0 0 0 0 0 0 1 0]
     [0 0 0 0 0 0 0 0 1]]

-  Plots the set of functions (using option ``-p``) and saves the plot in the current directory. An example of a generated plot is shown below.

.. image:: https://raw.githubusercontent.com/ameli/Orthogonal-Functions/master/docs/images/OrthogonalFunctions.svg
    :align: center

Citation
--------

Ameli, S., and Shadden. S. C. (2020). Interpolating the Trace of the Inverse of Matrix **A** + t **B**. `arXiv:2009.07385 <https://arxiv.org/abs/2009.07385>`__ [math.NA]

::

    @misc{AMELI-2020,
        title={Interpolating the Trace of the Inverse of Matrix $\mathbf{A} + t \mathbf{B}$},
        author={Siavash Ameli and Shawn C. Shadden},
        year={2020},
        month = sep,
        eid = {arXiv:2009.07385},
        eprint={2009.07385},
        archivePrefix={arXiv},
        primaryClass={math.NA},
        howpublished={\emph{arXiv}: 2009.07385 [math.NA]},
    }

.. |travis-devel| image:: https://img.shields.io/travis/com/ameli/Orthogonal-Functions
   :target: https://travis-ci.com/github/ameli/Orthogonal-Functions
.. |codecov-devel| image:: https://img.shields.io/codecov/c/github/ameli/Orthogonal-Functions
   :target: https://codecov.io/gh/ameli/Orthogonal-Functions
.. |licence| image:: https://img.shields.io/github/license/ameli/Orthogonal-Functions
   :target: https://opensource.org/licenses/MIT
.. |travis-devel-linux| image:: https://img.shields.io/travis/com/ameli/Orthogonal-Functions?env=BADGE=linux&label=build&branch=master
   :target: https://travis-ci.com/github/ameli/Orthogonal-Functions
.. |travis-devel-osx| image:: https://img.shields.io/travis/com/ameli/Orthogonal-Functions?env=BADGE=osx&label=build&branch=master
   :target: https://travis-ci.com/github/ameli/Orthogonal-Functions
.. |travis-devel-windows| image:: https://img.shields.io/travis/com/ameli/Orthogonal-Functions?env=BADGE=windows&label=build&branch=master
   :target: https://travis-ci.com/github/ameli/Orthogonal-Functions
.. |implementation| image:: https://img.shields.io/pypi/implementation/OrthogonalFunctions
.. |pyversions| image:: https://img.shields.io/pypi/pyversions/OrthogonalFunctions
.. |format| image:: https://img.shields.io/pypi/format/OrthogonalFunctions

.. |image09| image:: https://raw.githubusercontent.com/ameli/Orthogonal-Functions/master/docs/images/phi_i_perp.svg
.. |image10| image:: https://raw.githubusercontent.com/ameli/Orthogonal-Functions/master/docs/images/phi_i.svg
.. |image11| image:: https://raw.githubusercontent.com/ameli/Orthogonal-Functions/master/docs/images/phi_i_perp.svg
.. |image12| image:: https://raw.githubusercontent.com/ameli/Orthogonal-Functions/master/docs/images/phi_i.svg
.. |image13| image:: https://raw.githubusercontent.com/ameli/Orthogonal-Functions/master/docs/images/phi_i_perp.svg
.. |image14| image:: https://raw.githubusercontent.com/ameli/Orthogonal-Functions/master/docs/images/interval.svg
.. |image15| image:: https://raw.githubusercontent.com/ameli/Orthogonal-Functions/master/docs/images/w.svg
.. |image16| image:: https://raw.githubusercontent.com/ameli/Orthogonal-Functions/master/docs/images/delta.svg
.. |image17| image:: https://raw.githubusercontent.com/ameli/Orthogonal-Functions/master/docs/images/i_0.svg
.. |image18| image:: https://raw.githubusercontent.com/ameli/Orthogonal-Functions/master/docs/images/n.svg
.. |image19| image:: https://raw.githubusercontent.com/ameli/Orthogonal-Functions/master/docs/images/L.svg
.. |image20| image:: https://raw.githubusercontent.com/ameli/Orthogonal-Functions/master/docs/images/i_0.svg
.. |image21| image:: https://raw.githubusercontent.com/ameli/Orthogonal-Functions/master/docs/images/n.svg
.. |image22| image:: https://raw.githubusercontent.com/ameli/Orthogonal-Functions/master/docs/images/L.svg
.. |image23| image:: https://raw.githubusercontent.com/ameli/Orthogonal-Functions/master/docs/images/i_0.svg
.. |image24| image:: https://raw.githubusercontent.com/ameli/Orthogonal-Functions/master/docs/images/n.svg
.. |image25| image:: https://raw.githubusercontent.com/ameli/Orthogonal-Functions/master/docs/images/L.svg
.. |image26| image:: https://raw.githubusercontent.com/ameli/Orthogonal-Functions/master/docs/images/alpha_i.svg
.. |image27| image:: https://raw.githubusercontent.com/ameli/Orthogonal-Functions/master/docs/images/a_ij.svg
